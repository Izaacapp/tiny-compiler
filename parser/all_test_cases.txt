Printing contents of correct directory
=====================================
File: correct/elf16.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
3 0 4
1 0 2
2 0 3
4 0 4
3 0 3
3 0 4
2 0 5
8 0 64
3 0 3
1 0 1
2 0 1
4 0 3
3 0 4
1 0 1
2 0 1
4 0 4
3 0 3
3 0 4
2 0 7
8 0 103
3 0 3
1 0 1
2 0 1
4 0 3
7 0 76
9 0 3
0 0 0


File: correct/elf17.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
9 0 3
0 0 0


File: correct/elf18.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
3 0 3
1 0 10
2 0 7
8 0 55
3 0 3
1 0 1
2 0 1
4 0 3
7 0 28
9 0 3
0 0 0


File: correct/elf19.txt
7 0 13
6 0 5
1 0 5
1 0 2
2 0 3
4 0 3
3 0 3
1 0 1
2 0 1
4 0 4
3 0 3
3 0 4
2 0 1
9 0 1
9 0 3
0 0 0


File: correct/elf20.txt
7 0 13
6 0 5
1 0 5
1 0 2
2 0 1
4 0 3
3 0 3
1 0 1
2 0 1
4 0 4
3 0 3
3 0 4
2 0 1
9 0 1
3 0 3
1 0 10
2 0 7
8 0 115
3 0 3
1 0 9
2 0 5
8 0 82
3 0 3
9 0 1
3 0 3
1 0 1
2 0 1
4 0 3
3 0 3
1 0 2
2 0 3
4 0 4
3 0 4
9 0 1
7 0 52
3 0 3
3 0 4
2 0 1
9 0 1
9 0 3
0 0 0


File: correct/elf21.txt
7 0 13
6 0 5
1 0 0
4 0 3
1 0 1
4 0 4
3 0 4
1 0 10
2 0 8
8 0 85
3 0 3
3 0 4
2 0 1
4 0 3
3 0 4
1 0 1
2 0 1
4 0 4
3 0 4
1 0 10
2 0 9
8 0 82
3 0 3
9 0 1
7 0 28
3 0 3
9 0 1
9 0 3
0 0 0


File: correct/elf22.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
9 0 3
0 0 0


File: correct/elf23.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
9 0 3
0 0 0


File: correct/elf26.txt
7 0 13
6 0 4
1 0 2
1 0 3
2 0 3
4 0 3
3 0 3
1 0 10
2 0 7
8 0 55
3 0 3
1 0 1
2 0 1
4 0 3
7 0 28
3 0 3
9 0 1
9 0 3
0 0 0


File: correct/elf27.txt
7 0 13
6 0 5
1 0 5
1 0 2
2 0 1
4 0 3
3 0 3
1 0 1
2 0 1
4 0 4
3 0 3
3 0 4
2 0 1
9 0 1
3 0 3
1 0 10
2 0 7
8 0 115
3 0 3
1 0 9
2 0 5
8 0 82
3 0 3
9 0 1
3 0 3
1 0 1
2 0 1
4 0 3
3 0 3
1 0 2
2 0 3
4 0 4
3 0 4
9 0 1
7 0 52
3 0 3
3 0 4
2 0 1
9 0 1
9 0 3
0 0 0


File: correct/elf31.txt
7 0 13
6 0 5
3 0 4
1 0 2
2 0 3
4 0 3
9 0 3
0 0 0


File: correct/input16.txt
var x, y;
begin
    x := y * 2;
    y := y * 2;
    if x = y then
        x := x + 1
    fi;
    y := y + 1;
    while x < y do
        x := x + 1
end.

File: correct/input17.txt
var x, y;
begin
    x := y * 2;
end.

File: correct/input18.txt
var x, y;
begin
    x := y * 2;
    while x < 10 do
        x := x + 1;
end.

File: correct/input19.txt
const z = 5;
var x, y;
begin
    x := z * 2;
    y := x + 1;
    write x + y
end.

File: correct/input20.txt
const z = 5;
var x, y;
begin
    x := z + 2;
    y := x + 1;
    write x + y;
    while x < 10 do
        begin 
           if x = 9 then
              write x
           fi;
           x := x + 1;
		   y := x * 2;
		   write y
        end;
    write x + y
end.

File: correct/input21.txt
/* sums the first n natural numbers */
const n = 10;
var sum, i;
begin
    sum := 0;
    i := 1;
    while i <= n do
        begin
            sum := sum + i;
            i := i + 1;
            if i > n then
                write sum  /* should print sum */
            fi;
        end;
    write sum /* should print sum again */
end.

File: correct/input22.txt
var x, y;
begin
    x := y * 2;
end.

File: correct/input23.txt
const z = 5;
var x, y;
begin
    x := y * 2;
end.

File: correct/input26.txt
const x = 2, y = 3;
var z;
begin
    z := x * y;
    while z < 10 do
        begin
            z := z + 1;
        end;
    write z;
end.

File: correct/input27.txt
const z = 5;
var x, y;
begin
    x := z + 2;
    y := x + 1;
    write x + y;
    while x < 10 do
        begin 
           if x = 9 then
              write x
           fi;
           x := x + 1;
           y := x * 2;
           write y
        end;
    write x + y
end.

File: correct/input31.txt
var x, y;
begin
  x := y * 2
end.

File: correct/output16.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    LOD    0    4
   7    LIT    0    2
   8    OPR    0    3
   9    STO    0    4
  10    LOD    0    3
  11    LOD    0    4
  12    OPR    0    5
  13    JPC    0    64
  14    LOD    0    3
  15    LIT    0    1
  16    OPR    0    1
  17    STO    0    3
  18    LOD    0    4
  19    LIT    0    1
  20    OPR    0    1
  21    STO    0    4
  22    LOD    0    3
  23    LOD    0    4
  24    OPR    0    7
  25    JPC    0    103
  26    LOD    0    3
  27    LIT    0    1
  28    OPR    0    1
  29    STO    0    3
  30    JMP    0    76
  31    SYS    0    3



File: correct/output17.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    SYS    0    3



File: correct/output18.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    LOD    0    3
   7    LIT    0    10
   8    OPR    0    7
   9    JPC    0    55
  10    LOD    0    3
  11    LIT    0    1
  12    OPR    0    1
  13    STO    0    3
  14    JMP    0    28
  15    SYS    0    3



File: correct/output19.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | z           |     5 |     0 |       0 |     1
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LIT    0    5
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    LOD    0    3
   7    LIT    0    1
   8    OPR    0    1
   9    STO    0    4
  10    LOD    0    3
  11    LOD    0    4
  12    OPR    0    1
  13    SYS    0    1
  14    SYS    0    3



File: correct/output20.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | z           |     5 |     0 |       0 |     1
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LIT    0    5
   3    LIT    0    2
   4    OPR    0    1
   5    STO    0    3
   6    LOD    0    3
   7    LIT    0    1
   8    OPR    0    1
   9    STO    0    4
  10    LOD    0    3
  11    LOD    0    4
  12    OPR    0    1
  13    SYS    0    1
  14    LOD    0    3
  15    LIT    0    10
  16    OPR    0    7
  17    JPC    0    115
  18    LOD    0    3
  19    LIT    0    9
  20    OPR    0    5
  21    JPC    0    82
  22    LOD    0    3
  23    SYS    0    1
  24    LOD    0    3
  25    LIT    0    1
  26    OPR    0    1
  27    STO    0    3
  28    LOD    0    3
  29    LIT    0    2
  30    OPR    0    3
  31    STO    0    4
  32    LOD    0    4
  33    SYS    0    1
  34    JMP    0    52
  35    LOD    0    3
  36    LOD    0    4
  37    OPR    0    1
  38    SYS    0    1
  39    SYS    0    3



File: correct/output21.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | n           |    10 |     0 |       0 |     1
   2 | sum         |     0 |     0 |       3 |     1
   2 | i           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LIT    0    0
   3    STO    0    3
   4    LIT    0    1
   5    STO    0    4
   6    LOD    0    4
   7    LIT    0    10
   8    OPR    0    8
   9    JPC    0    85
  10    LOD    0    3
  11    LOD    0    4
  12    OPR    0    1
  13    STO    0    3
  14    LOD    0    4
  15    LIT    0    1
  16    OPR    0    1
  17    STO    0    4
  18    LOD    0    4
  19    LIT    0    10
  20    OPR    0    9
  21    JPC    0    82
  22    LOD    0    3
  23    SYS    0    1
  24    JMP    0    28
  25    LOD    0    3
  26    SYS    0    1
  27    SYS    0    3



File: correct/output22.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    SYS    0    3



File: correct/output23.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | z           |     5 |     0 |       0 |     1
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    SYS    0    3



File: correct/output26.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | x           |     2 |     0 |       0 |     1
   1 | y           |     3 |     0 |       0 |     1
   2 | z           |     0 |     0 |       3 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    4
   2    LIT    0    2
   3    LIT    0    3
   4    OPR    0    3
   5    STO    0    3
   6    LOD    0    3
   7    LIT    0    10
   8    OPR    0    7
   9    JPC    0    55
  10    LOD    0    3
  11    LIT    0    1
  12    OPR    0    1
  13    STO    0    3
  14    JMP    0    28
  15    LOD    0    3
  16    SYS    0    1
  17    SYS    0    3



File: correct/output27.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | z           |     5 |     0 |       0 |     1
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LIT    0    5
   3    LIT    0    2
   4    OPR    0    1
   5    STO    0    3
   6    LOD    0    3
   7    LIT    0    1
   8    OPR    0    1
   9    STO    0    4
  10    LOD    0    3
  11    LOD    0    4
  12    OPR    0    1
  13    SYS    0    1
  14    LOD    0    3
  15    LIT    0    10
  16    OPR    0    7
  17    JPC    0    115
  18    LOD    0    3
  19    LIT    0    9
  20    OPR    0    5
  21    JPC    0    82
  22    LOD    0    3
  23    SYS    0    1
  24    LOD    0    3
  25    LIT    0    1
  26    OPR    0    1
  27    STO    0    3
  28    LOD    0    3
  29    LIT    0    2
  30    OPR    0    3
  31    STO    0    4
  32    LOD    0    4
  33    SYS    0    1
  34    JMP    0    52
  35    LOD    0    3
  36    LOD    0    4
  37    OPR    0    1
  38    SYS    0    1
  39    SYS    0    3



File: correct/output31.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       3 |     1
   2 | y           |     0 |     0 |       4 |     1
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    SYS    0    3



Printing contents of errors directory
=====================================
File: errors/input1.txt
var x, y;
begin
    x := y * 2;
end

File: errors/input10.txt
var x, y;
begin
    x := y * 2;
.

File: errors/input11.txt
var x, y;
begin
    if x = y
        x := y * 2;
end.

File: errors/input12.txt
var x, y;
begin
    while x = y 
        x := y * 2;
end.

File: errors/input13.txt
var x, y;
begin
    if x then x := y * 2;
end.

File: errors/input14.txt
var x, y;
begin
    x := (y * 2;
end.

File: errors/input15.txt
var x, y;
begin
    x := y * ;
end.

File: errors/input2.txt
var 1, y;
begin
    x := y * 2;
end.

File: errors/input24.txt
const a = 5, b = 10;
var x, y, z;

begin
    x := a + b;
    y := x * 2;
    z := y / 2;
    if z = a then
        x := x - 1;
    while z > 0 do
        z := z - 1;
    if odd x then
        y := y + 1;
    if z <> a then
        x := x + 1;
    if z >= b then
        z := z / 2;
end.


File: errors/input25.txt
const a = 1;
var b;
begin
    b := a + 1;
    if b > 1 then
        begin
            write b;
        end;
end.

File: errors/input28.txt
var x, y;
begin
    x := y * 2;
    y := y * 2;
    if x = y then
        x := x + 1;
    fi;
    y := y + 1;
    while x < y do
        x := x + 1
end.

File: errors/input29.txt
const z = 5;
var x, y;
begin
    x := z + 2;
    y := x + 1;
    write x + y;
    while x < 10 do
        begin 
           if x = 9 then
              write x
           fi
           x := x + 1;
		   y := x * 2;
		   write y
        end
    write x + y
end.

File: errors/input3.txt
var x, x;
begin
    x := y * 2;
end.

File: errors/input30.txt
/* sums the first n natural numbers */
const n = 10;
var sum, i;
begin
    sum := 0;
    i := 1;
    while i <= n do
        begin
            sum := sum + i;
            i := i + 1;
            if i > n then
                write sum  /* should print sum */
            fi
        end
    write sum /* should print sum again */
end.

File: errors/input32.txt
var x, y;
begin
    x := y * 2;
    y := y * 2;
    if x = y then
        x := x + 1;
    fi;
    y := y + 1;
    while x < y do
        x := x + 1
end.

File: errors/input4.txt
const x 5;
var y;
begin
    x := y * 2;
end.

File: errors/input5.txt
const x = a;
var y;
begin
    x := y * 2;
end.

File: errors/input6.txt
var x, y
begin
    x := y * 2;
end.

File: errors/input7.txt
var x, y;
begin
    z := y * 2;
end

File: errors/input8.txt
const x = 5;
begin
    x := y * 2;
end.

File: errors/input9.txt
var x, y;
begin
    x = y * 2;
end.

File: errors/output1.txt
Error: program must end with period


File: errors/output10.txt
Error: begin must be followed by end


File: errors/output11.txt
Error: if must be followed by then


File: errors/output12.txt
Error: while must be followed by do


File: errors/output13.txt
Error: condition must contain comparison operator


File: errors/output14.txt
Error: right parenthesis must follow left parenthesis


File: errors/output15.txt
Error: arithmetic equations must contain operands, parentheses, numbers, or symbols


File: errors/output2.txt
Error: const, var, and read keywords must be followed by identifier


File: errors/output22.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   2 | x           |     0 |     0 |       2 |     0
   2 | y           |     0 |     0 |       3 |     0
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    5
   2    LOD    0    3
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    2
   6    SYS    0    3



File: errors/output23.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | z           |     5 |     0 |       0 |     0
   2 | x           |     0 |     0 |       3 |     0
   2 | y           |     0 |     0 |       4 |     0
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    6
   2    LOD    0    4
   3    LIT    0    2
   4    OPR    0    3
   5    STO    0    3
   6    SYS    0    3



File: errors/output24.txt
Error: then must be followed by fi


File: errors/output25.txt
Error: then must be followed by fi


File: errors/output26.txt
Symbol Table:
Kind | Name        | Value | Level | Address | Mark
---------------------------------------------------
   1 | x           |     2 |     0 |       0 |     0
   1 | y           |     3 |     0 |       0 |     0
   2 | z           |     0 |     0 |       4 |     0
Assembly Code:
Line    OP    L    M
   0    JMP    0    13
   1    INC    0    6
   2    LIT    0    2
   3    LIT    0    3
   4    OPR    0    3
   5    STO    0    4
   6    LOD    0    4
   7    LIT    0    10
   8    OPR    0    7
   9    JPC    0    55
  10    LOD    0    4
  11    LIT    0    1
  12    OPR    0    1
  13    STO    0    4
  14    JMP    0    28
  15    LOD    0    4
  16    SYS    0    1
  17    SYS    0    3



File: errors/output28.txt
Error: then must be followed by fi


File: errors/output29.txt
Error: statements must be followed by a semicolon


File: errors/output3.txt
Error: symbol name has already been declared


File: errors/output30.txt
Error: statements must be followed by a semicolon


File: errors/output32.txt
Error: then must be followed by fi


File: errors/output4.txt
Error: constants must be assigned with =


File: errors/output5.txt
Error: constants must be assigned an integer value


File: errors/output6.txt
Error: constant and variable declarations must be followed by a semicolon


File: errors/output7.txt
Error: undeclared identifier


File: errors/output8.txt
Error: only variable values may be altered


File: errors/output9.txt
Error: assignment statements must use :=


